@{
    Layout = "~/_SiteLayout.cshtml";

    var successMessage = "";
    
    var userId = WebSecurity.CurrentUserId;
    var username = WebSecurity.CurrentUserName;

    var email = "";
    var fname = "";

    // Setup validation
    Validation.RequireField("fname", "You must specify your friend's name.");
    Validation.RequireField("email", "You must specify your friend's email address.");

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        
        email = Request.Form["email"];
        fname = Request.Form["fname"];
        
        if (Validation.IsValid()) {
            //-- Insert a new user into the database
            var db = Database.Open("FriendFinder");

            //-- Check if invite already exists
            var invite = db.QuerySingle("SELECT UserId, Email FROM Invitations WHERE UserId = @0 AND Email = @1", userId, email);
            if(invite == null)
            {
                //-- Insert invite into the invitations table
                db.Execute("INSERT INTO Invitations (UserId, Name, Email) VALUES (@0, @1, @2)", userId, fname, email);

                try
                {
                    var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                    var registerUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Register?inviteId=0");

                    WebMail.Send(
                        to: email,
                        subject: "FriendFinder | Invitation",
                        body: string.Format("{0} has invited you to join FriendFinder. Visit <a href=\"" + registerUrl + "\">" + registerUrl + "</a> to register")
                    );

                    successMessage = "Invitation sent";
                }
                catch(Exception ex)
                {
                    ModelState.AddFormError(ex.Message);
                }
            }
        }
    }
}

@if(!successMessage.IsEmpty())
{
    <p>@successMessage</p>
}

<form method="post">
    @AntiForgery.GetHtml()
    @Html.ValidationSummary("Invitation was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)
    <fieldset>
        <legend>Invite a friend</legend>
        <ol>
            <li>
                <label for="email" @if (!ModelState.IsValidField("email")) {<text>class="error-label"</text>}>Email address</label>
                <input type="text" id="email" name="email" value="@email" @Validation.For("email") />
                @Html.ValidationMessage("email")
            </li>
            <li>
                <label for="fname" @if (!ModelState.IsValidField("fname")) {<text>class="error-label"</text>}>Friend's name</label>
                <input type="text" id="fname" name="fname" value="@fname" @Validation.For("fname") />
                @Html.ValidationMessage("fname")
            </li>
        </ol>
        <input type="submit" value="Invite" />
    </fieldset>
</form>